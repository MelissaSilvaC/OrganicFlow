
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.2.0
 * Query Engine version: 2804dc98259d2ea960602aca6b8e7fdc03c1758f
 */
Prisma.prismaVersion = {
  client: "5.2.0",
  engine: "2804dc98259d2ea960602aca6b8e7fdc03c1758f"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  password: 'password',
  email: 'email',
  company: 'company',
  cnpj: 'cnpj',
  photo: 'photo',
  gerente: 'gerente',
  fiscal: 'fiscal',
  medalha: 'medalha',
  created_at: 'created_at'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_role: 'id_role',
  responsavel_email: 'responsavel_email'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.RolePermissionScalarFieldEnum = {
  id: 'id',
  id_permission: 'id_permission',
  id_role: 'id_role'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_permission: 'id_permission'
};

exports.Prisma.DenunciaScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  description: 'description',
  alvo: 'alvo'
};

exports.Prisma.LinhaScalarFieldEnum = {
  id: 'id',
  photo: 'photo',
  local_cultivo: 'local_cultivo',
  especie: 'especie',
  data_cultivo: 'data_cultivo',
  lote: 'lote',
  qrcode: 'qrcode',
  id_produto: 'id_produto'
};

exports.Prisma.Prod_AgriScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_linha: 'id_linha',
  nome: 'nome',
  local: 'local',
  dt_plantio: 'dt_plantio',
  dt_colheita: 'dt_colheita',
  insumo: 'insumo',
  praticas: 'praticas',
  private: 'private'
};

exports.Prisma.EmbalagemScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_linha: 'id_linha',
  nome: 'nome',
  local: 'local',
  ingrediente: 'ingrediente',
  praticas: 'praticas',
  dt_processamento: 'dt_processamento',
  dt_embalagem: 'dt_embalagem',
  private: 'private'
};

exports.Prisma.TransporteScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_linha: 'id_linha',
  nome: 'nome',
  praticas: 'praticas',
  dt_carregamento: 'dt_carregamento',
  dt_descarregamento: 'dt_descarregamento',
  origem: 'origem',
  destino: 'destino',
  private: 'private'
};

exports.Prisma.ArmazenamentoScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_linha: 'id_linha',
  nome: 'nome',
  local: 'local',
  praticas: 'praticas',
  responsavel: 'responsavel',
  dt_entrada: 'dt_entrada',
  dt_saida: 'dt_saida',
  private: 'private'
};

exports.Prisma.VarejoScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_linha: 'id_linha',
  nome: 'nome',
  local: 'local',
  dt_chegada: 'dt_chegada',
  private: 'private'
};

exports.Prisma.ProdutoScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  nome: 'nome',
  photo: 'photo'
};

exports.Prisma.FeedScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  description: 'description'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  UserRole: 'UserRole',
  Permission: 'Permission',
  RolePermission: 'RolePermission',
  UserPermission: 'UserPermission',
  Denuncia: 'Denuncia',
  Linha: 'Linha',
  Prod_Agri: 'Prod_Agri',
  Embalagem: 'Embalagem',
  Transporte: 'Transporte',
  Armazenamento: 'Armazenamento',
  Varejo: 'Varejo',
  Produto: 'Produto',
  Feed: 'Feed'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
